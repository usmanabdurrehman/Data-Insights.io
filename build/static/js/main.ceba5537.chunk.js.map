{"version":3,"sources":["Context/Context.js","components/Stats/Stats.js","components/DataDisplay/DataDisplay.js","components/FeatureVsTarget/FeatureVsTarget.js","components/FeatureImportance/FeatureImportance.js","components/ML/ML.js","components/Tabbed/Tabbed.js","components/Main/Main.js","App.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","dataDisplay","title","rows","columns","stats","problemType","numSamples","numFeatures","numTarget","featureStats","featureName","central","type","nullValCount","featureImportances","linear","tree","statistical","plotData","x","y","xy","model_info","best_model_name","accuracy","data","setData","Provider","value","children","useStyles","makeStyles","table","minWidth","Stats","withStyles","theme","head","backgroundColor","color","body","fontSize","TableCell","root","TableRow","useContext","cardStyle","width","borderSizing","borderRadius","padding","background","className","Typography","variant","gutterBottom","charAt","toUpperCase","substring","length","style","display","alignItems","justifyContent","marginTop","DataDisplay","createMuiTheme","overrides","MUIDataTableHead","options","selectableRowsHeader","selectableRows","FeaturesVsTarget","borderBottomColor","borderColor","TextField","lineData","labels","datasets","label","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scatterData","colors_points","problem_type","legend","fontColor","scales","yAxes","scaleLabel","labelString","ticks","xAxes","StyledTableCell","StyledTableRow","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","map","row","key","name","scope","CssTextField","borderWidth","margin","spacing","input","inputField","button","ML","prediction","setPrediction","features","setFeatures","onChange","e","target","defaultValue","Button","axios","method","url","withCredentials","headers","JSON","parse","then","res","border","paddingRight","TabPanel","index","other","role","hidden","id","aria-labelledby","overflowY","Box","p","a11yProps","flexGrow","palette","paper","Tabbed","useTheme","React","setValue","AppBar","position","Tabs","TabIndicatorProps","inkBarStyle","event","newValue","scrollButtons","centered","Tab","axis","direction","onChangeIndex","FeatureVsTarget","FeatureImportance","Main","file","setFile","setTarget","setUploaded","isLoading","setIsLoading","show","setShow","custom","prostate","heart","stockprices","showTicks","setShowTicks","flexDirection","files","accept","htmlFor","IconButton","InputProps","align","Tooltip","onClick","formdata","FormData","append","stringify","console","log","elevation","height","top","left","zIndex","marginBottom","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ceba5537.chunk.js","sourcesContent":["import React,{createContext,useState} from 'react'\r\n\r\nexport let DataContext = createContext()\r\n\r\nexport let DataProvider = props => {\r\n\r\n\tlet [data,setData] = useState({\r\n\t\tdataDisplay:{\r\n\t\t\ttitle:'The Employee List',\r\n\t\t\trows:[\r\n\t\t\t\t[\"Joe James\", \"Test Corp\", \"Yonkers\", \"NY\"],\r\n\t\t\t\t[\"John Walsh\", \"Test Corp\", \"Hartford\", \"CT\"],\r\n\t\t\t\t[\"Bob Herm\", \"Test Corp\", \"Tampa\", \"FL\"],\r\n\t\t\t\t[\"James Houston\", \"Test Corp\", \"Dallas\", \"TX\"],\r\n\t\t\t],\r\n\t\t\tcolumns:[\"Name\", \"Company\", \"City\", \"State\"]\r\n\t\t},\r\n\t\tstats:{\r\n\t\t\tproblemType:'classification',\r\n\t\t\tnumSamples:116,\r\n\t\t\tnumFeatures:13,\r\n\t\t\tnumTarget:1,\r\n\t\t\tfeatureStats:[{\r\n\t\t\t\tfeatureName:'calorie',\r\n\t\t\t\tcentral:3,\r\n\t\t\t\ttype:'Nominal',\r\n\t\t\t\tnullValCount:20\r\n\t\t\t\t},{\r\n\t\t\t\tfeatureName:'ATP',\r\n\t\t\t\tcentral:1,\r\n\t\t\t\ttype:'Interal',\r\n\t\t\t\tnullValCount:0\r\n\t\t\t}]\r\n\t\t},\r\n\t\tfeatureImportances:[{\r\n\t\t\t\tfeatureName:'Calorie',\r\n\t\t\t\tlinear:1,\r\n\t\t\t\ttree:2,\r\n\t\t\t\tstatistical:1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tfeatureName:'ATP',\r\n\t\t\t\tlinear:3,\r\n\t\t\t\ttree:4,\r\n\t\t\t\tstatistical:3\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tfeatureName:'Calcium',\r\n\t\t\t\tlinear:5,\r\n\t\t\t\ttree:5,\r\n\t\t\t\tstatistical:5\r\n\t\t\t}],\r\n\t\tplotData:{\r\n\t\t\tproblemType:'regression',\r\n\t\t\tx:[1,10,2],\r\n\t\t\ty:[3,16,9],\r\n\t\t\txy:[{x:1,y:3}, {x:10,y:16}, {x:2,y:9},]\r\n\t\t},\r\n\t\tmodel_info:{\r\n\t\t\tbest_model_name:'RandomForestRegressor',\r\n\t\t\taccuracy:'99.32'\r\n\t\t}\t\r\n\t})\r\n\r\n\treturn(\r\n\t\t<DataContext.Provider value={{data,setData}}>\r\n\t\t\t{props.children}\r\n\t\t</DataContext.Provider>\r\n\t\t)\r\n}","import React,{useState,useContext} from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {DataContext} from '../../Context/Context'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#084c61' ,\r\n    color: '#BCE7FD',\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: '#f4f4f4'\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nlet Stats = () => {\r\n\r\n\tlet {data} = useContext(DataContext)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tlet cardStyle = {\r\n\t\twidth:'27%',\r\n\t\tborderSizing:'border-box',\r\n\t\tborderRadius:'10px',\r\n\t\tpadding:'20px',\r\n\t\tbackground:'#084c61',\r\n\t\tcolor:'#BCE7FD'\r\n\t}\r\n\r\n\tlet rows = [{\r\n\t\tfeatureName:'calorie',\r\n\t\tcentral:3,\r\n\t\ttype:'Nominal',\r\n\t\tnullValCount:20\r\n\t},{\r\n\t\tfeatureName:'ATP',\r\n\t\tcentral:1,\r\n\t\ttype:'Interal',\r\n\t\tnullValCount:0\r\n\t}\r\n\t]\r\n\r\n\treturn(\r\n\t\t<div className='tabElement'>\r\n\t\t\t<Typography variant=\"h2\" gutterBottom>\r\n        \t\t{data.stats.problemType.charAt(0).toUpperCase() + data.stats.problemType.substring(1,data.stats.problemType.length)} Problem\r\n      \t</Typography>\r\n      \t<div style={{\r\n      \t\tdisplay:'flex',\r\n      \t\talignItems:'center',\r\n      \t\tjustifyContent:'space-between'\r\n      \t}}>\r\n\t      \t<div style={cardStyle}>\r\n\t      \t\t<Typography variant='h3'>{data.stats.numSamples}</Typography>\r\n\t      \t\t<Typography>Samples</Typography>\r\n\t      \t</div>\r\n\t      \t<div style={cardStyle}>\r\n\t      \t\t<Typography variant='h3'>{data.stats.numFeatures}</Typography>\r\n\t      \t\t<Typography>Features</Typography>\r\n\t      \t</div>\r\n\t      \t<div style={cardStyle}>\r\n\t      \t\t<Typography variant='h3'>{data.stats.numTarget}</Typography>\r\n\t      \t\t<Typography>Target</Typography>\r\n\t      \t</div>\r\n      \t</div>\r\n\r\n      \t<div style={{\r\n      \t\tmarginTop:'30px'\r\n      \t}}>\r\n      \t{/*<Typography variant=\"h4\" gutterBottom>\r\n      \t        \t\tFeature Stats\r\n      \t      \t</Typography>\r\n      \t      \t{(data.stats.featureStats.length!=0)?\r\n      \t      \t\t(\r\n      \t      \t\t\t<TableContainer component={Paper}>\r\n      \t\t\t\t      <Table className={classes.table} aria-label=\"simple table\">\r\n      \t\t\t\t        <TableHead>\r\n      \t\t\t\t          <StyledTableRow>\r\n      \t\t\t\t            <StyledTableCell>Feature Name</StyledTableCell>\r\n      \t\t\t\t            <StyledTableCell>Type</StyledTableCell>\r\n      \t\t\t\t            <StyledTableCell>Central Tendency</StyledTableCell>\r\n      \t\t\t\t            <StyledTableCell>Null value count</StyledTableCell>\r\n      \t\t\t\t          </StyledTableRow>\r\n      \t\t\t\t        </TableHead>\r\n      \t\t\t\t        <TableBody>\r\n      \t\t\t\t          {data.stats.featureStats.map((row) => (\r\n      \t\t\t\t            <StyledTableRow key={row.featureName}>\r\n      \t\t\t\t              <StyledTableCell component=\"th\" scope=\"row\">\r\n      \t\t\t\t                {row.featureName}\r\n      \t\t\t\t              </StyledTableCell>\r\n      \t\t\t\t              <StyledTableCell>{row.type}</StyledTableCell>\r\n      \t\t\t\t              <StyledTableCell>{row.central}</StyledTableCell>\r\n      \t\t\t\t              <StyledTableCell>{row.nullValCount}</StyledTableCell>\r\n      \t\t\t\t            </StyledTableRow>\r\n      \t\t\t\t          ))}\r\n      \t\t\t\t        </TableBody>\r\n      \t\t\t\t      </Table>\r\n      \t\t\t\t    </TableContainer>\r\n      \t      \t\t):null\r\n      \t      \t\t}*/}\r\n      \t</div>\r\n\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Stats","import React,{useState,useContext} from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createMuiTheme, MuiThemeProvider,withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {DataContext} from '../../Context/Context'\r\n\r\nlet getMuiTheme = () => createMuiTheme({\r\n    overrides: {\r\n      MUIDataTableHead: {\r\n        root: {\r\n         backgroundColor: \"#FF0000\"\r\n        },\r\n        \"MUIDataTableHead-responsiveStacked-40\":{\r\n        \tbackgroundColor: \"#FF0000\"\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#084c61' ,\r\n    color: '#BCE7FD',\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: '#f4f4f4'\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nlet DataDisplay = () => {\r\n\r\n\tlet {data} = useContext(DataContext)\r\n\r\n\tconst options = {\r\n\t \tselectableRowsHeader:false,\r\n\t \tselectableRows:'none'\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className='tabElement'>\r\n\t\t\t<Typography variant=\"h2\" gutterBottom>\r\n\t        \tThe Data\r\n\t      </Typography>\r\n\t\t\t<div>\r\n\t\t\t\t<MuiThemeProvider theme={getMuiTheme()}>\r\n\t\t\t\t\t<MUIDataTable\r\n\t\t\t\t\t  title={data.dataDisplay.title}\r\n\t\t\t\t\t  data={data.dataDisplay.rows}\r\n\t\t\t\t\t  columns={data.dataDisplay.columns}\r\n\t\t\t\t\t  options={options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</MuiThemeProvider>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default DataDisplay","import React,{useContext} from 'react'\r\nimport { Line,Scatter } from 'react-chartjs-2';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport {DataContext} from '../../Context/Context'\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nlet FeaturesVsTarget = () => {\r\n\r\n\tlet {data} = useContext(DataContext)\r\n\r\n\tconst lineData = {\r\n\t  labels: data.plotData.x,\r\n\t  datasets: [\r\n\t    {\r\n\t      label: 'Line plot',\r\n\t      fill: false,\r\n\t      lineTension: 0.1,\r\n\t      backgroundColor: '#084c61',\r\n\t      borderColor: '#BCE7FD',\r\n\t      borderCapStyle: 'butt',\r\n\t      borderDash: [],\r\n\t      borderDashOffset: 0.0,\r\n\t      borderJoinStyle: 'miter',\r\n\t      pointBorderColor: 'rgba(75,192,192,1)',\r\n\t      pointBackgroundColor: '#084c61',\r\n\t      pointBorderWidth: 1,\r\n\t      pointHoverRadius: 5,\r\n\t      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n\t      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n\t      pointHoverBorderWidth: 2,\r\n\t      pointRadius: 1,\r\n\t      pointHitRadius: 10,\r\n\t      data: data.plotData.xy\r\n\t    }\r\n\t  ]\r\n\t} \r\n\r\n\tconst scatterData = {\r\n        datasets: [{\r\n\t\t      fill: true,\r\n\t\t      lineTension: 0.1,\r\n\t\t      backgroundColor: '#084c61',\r\n\t\t      borderColor: '#BCE7FD',\r\n\t\t      borderCapStyle: 'butt',\r\n\t\t      borderDash: [],\r\n\t\t      borderDashOffset: 0.0,\r\n\t\t      borderJoinStyle: 'miter',\r\n\t\t      pointBorderColor: 'rgba(75,192,192,1)',\r\n\t\t      pointBackgroundColor: data.plotData.colors_points,\r\n\t\t      pointBorderWidth: 1,\r\n\t\t      pointHoverRadius: 5,\r\n\t\t      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n\t\t      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n\t\t      pointHoverBorderWidth: 3,\r\n\t\t      pointRadius: 2.5,\r\n\t\t      pointHitRadius: 10,\r\n            label: 'Scatter plot',\r\n            data: data.plotData.xy\r\n        }]\r\n    }\r\n\tlet scatterOptions = {\r\n\t\tlegend: {\r\n             display:true,\r\n             labels: {\r\n                  fontColor: '#BCE7FD'\r\n                 }\r\n              },\r\n        scales: {\r\n            yAxes: [{\r\n            \tscaleLabel:{\r\n            \t\tdisplay:true,\r\n            \t\tlabelString:'2nd Principal Component',\r\n            \t\tfontColor:'#BCE7FD'\r\n            \t},\r\n                ticks: {\r\n                    fontColor: '#BCE7FD'\r\n                },\r\n            }],\r\n          xAxes: [\r\n          \t\t{\r\n          \t\tscaleLabel:{\r\n            \t\tdisplay:true,\r\n            \t\tlabelString:'1st Principal Component',\r\n            \t\tfontColor:'#BCE7FD'\r\n            \t},\r\n                ticks: {\r\n                    fontColor: '#BCE7FD'\r\n                },\r\n            }]\r\n        } \r\n\t}  \r\n\r\n\tlet lineOptions = {\r\n\t\tlegend: {\r\n\t\t\t\tdisplay:true,\r\n             labels: {\r\n                  fontColor: '#BCE7FD'\r\n                 }\r\n              },\r\n        scales: {\r\n            yAxes: [{\r\n            \tscaleLabel:{\r\n            \t\tdisplay:true,\r\n            \t\tlabelString:'target',\r\n            \t\tfontColor:'#BCE7FD'\r\n            \t},\r\n                ticks: {\r\n                    fontColor: '#BCE7FD'\r\n                },\r\n            }],\r\n          xAxes: [\r\n          \t\t{\r\n          \t\tscaleLabel:{\r\n            \t\tdisplay:true,\r\n            \t\tlabelString:'1st Principal Component',\r\n            \t\tfontColor:'#BCE7FD'\r\n            \t},\r\n                ticks: {\r\n                    fontColor: '#BCE7FD'\r\n                },\r\n            }]\r\n        } \r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='tabElement'>\r\n\t\t\t<Typography variant='h2' gutterBottom>\r\n\t\t\t\tFeatures* vs Target\r\n\t\t\t</Typography>\r\n\t\t\t<Typography variant='h7' style={{\r\n\t\t\t\tcolor:'gray'\r\n\t\t\t}}>\r\n\t\t\t\t* Compressed using a decomposition method like PCA\r\n\t\t\t</Typography>\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop:'30px',\r\n\t\t\t\tbackgroundColor:'#084c61',\r\n\t\t\t\tcolor:'white',\r\n\t\t\t\tborderRadius:'10px',\r\n\t\t\t\tpadding:'20px'\r\n\t\t\t}}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(data.plotData.problem_type=='classification')?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<Scatter style={{\r\n\t\t\t\t\t\t\tbackgroundColor:'#084c61'\r\n\t\t\t\t\t\t}} \r\n\t\t\t\t\t\tdata={scatterData} \r\n\t\t\t\t\t\toptions={scatterOptions}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t:\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<Line style={{\r\n\t\t\t\t\t\t\tbackgroundColor:'#084c61'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdata={lineData}\r\n\t\t\t\t\t\toptions={lineOptions}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default FeaturesVsTarget","import React,{useState,useContext} from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {DataContext} from '../../Context/Context'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#084c61' ,\r\n    color: '#BCE7FD',\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: '#f4f4f4'\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nlet Stats = () => {\r\n\r\n\tlet {data} = useContext(DataContext)\r\n\r\n\tconst classes = useStyles()\r\n\r\n\treturn(\r\n\t\t<div className='tabElement'>\r\n      \t<Typography variant=\"h2\" gutterBottom>\r\n        \t\tFeature Importance\r\n      \t</Typography>\r\n      \t<Typography variant=\"h8\" gutterBottom>\r\n        \t\tThis table shows the features as ranked by the respective method\r\n      \t</Typography>\r\n      \t<div style={{marginTop:'30px'}}>\r\n      \t\t<TableContainer component={Paper}>\r\n\t\t\t      <Table className={classes.table} aria-label=\"simple table\">\r\n\t\t\t        <TableHead>\r\n\t\t\t          <StyledTableRow>\r\n\t\t\t            <StyledTableCell>Feature Name</StyledTableCell>\r\n\t\t\t            <StyledTableCell>Tree</StyledTableCell>\r\n\t\t\t            <StyledTableCell>Statistical Test</StyledTableCell>\r\n\t\t\t          </StyledTableRow>\r\n\t\t\t        </TableHead>\r\n\t\t\t        <TableBody>\r\n\t\t\t          {data.featureImportances.map((row) => (\r\n\t\t\t            <StyledTableRow key={row.name}>\r\n\t\t\t              <StyledTableCell component=\"th\" scope=\"row\">\r\n\t\t\t                {row.featureName}\r\n\t\t\t              </StyledTableCell>\r\n\t\t\t              <StyledTableCell>{row.tree}</StyledTableCell>\r\n\t\t\t              <StyledTableCell>{row.statistical}</StyledTableCell>\r\n\t\t\t            </StyledTableRow>\r\n\t\t\t          ))}\r\n\t\t\t        </TableBody>\r\n\t\t\t      </Table>\r\n\t\t\t    </TableContainer>\r\n\t\t\t</div>    \r\n      </div>\r\n\t\t)\r\n}\r\n\r\nexport default Stats","import React,{useState,useContext} from 'react'\r\nimport Typography from '@material-ui/core/Typography'; \r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport './ML.css'\r\nimport {DataContext} from '../../Context/Context'\r\nimport axios from 'axios'\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n  \tcolor: '#084c61',\r\n    '& label.Mui-focused': {\r\n      color: '#084c61',\r\n    },\r\n    '& label':{\r\n    \tcolor: '#084c61'\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#084c61',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#084c61',\r\n        borderWidth:'2px'\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#084c61',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#084c61',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  inputField:{\r\n  \tcolor:'#BCE7FD',\r\n\tfontSize:'14px',\r\n\tmarginTop:'15px'\r\n  },\r\n  button:{\r\n  \tbackgroundColor:'#084c61',\r\n  \tcolor:'#BCE7FD',\r\n  \t'&:hover':{\r\n  \t\tbackgroundColor:'#084c61',\r\n  \t\tcolor:'#BCE7FD',\r\n  \t}\r\n  },\r\n  fontColor:{\r\n  \tcolor:'#BCE7FD'\r\n  }\r\n}));\r\n\r\n\r\nlet ML = () => {\r\n\r\n  let [prediction,setPrediction] = useState(null) \r\n  let [features,setFeatures] = useState([])\r\n\r\n  let {data} = useContext(DataContext)\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tlet getPrediction = () => {\r\n    axios({\r\n      method:'post',\r\n      url:'/predict',\r\n      withCredentials:true,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*', \r\n        \"Content-Type\": \"application/json\" \r\n      },\r\n      data:{\r\n        features:JSON.parse(features)\r\n      }\r\n    })\r\n    .then(res=>{\r\n      setPrediction(res.data.prediction)\r\n    })\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='tabElement'>\r\n\t\t\t<Typography variant='h2' gutterBottom>Machine Learning</Typography>\r\n\t\t\t<Typography variant='h7'>We tried different Machinne Learning Models for this\r\n\t\t\tproblem and the best one is: <b>{data.model_info.best_model_name}</b> with test accuracy of <b>{data.model_info.accuracy}</b></Typography>\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tdisplay:'flex',\r\n\t\t\t\tmarginTop:'30px',\r\n\t\t\t\tjustifyContent:'space-between'\r\n\t\t\t}}>\r\n\t\t\t\t<CssTextField\r\n        onChange={e=>{\r\n          setFeatures(e.target.value)\r\n        }}\r\n\t\t\t\tdefaultValue=\"e.g [3,200,3.5,6]\"\r\n\t\t\t\tclassName='testtubeinput'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth:'70%'\r\n\t\t\t\t}} \r\n\t\t\t\tvariant='outlined' label='Features'/>\r\n\t\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tstyle={{ borderRadius: 50 }}\r\n\t\t\t\tclassName='testtubebtn' \r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth:'15%'\r\n\t\t\t\t}} \r\n\t\t\t\tonClick={getPrediction} variant=\"contained\" className={classes.button}>\r\n\t\t\t\t   Predict\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div \r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth:'15%',\r\n\t\t\t\t\tdisplay:'flex',\r\n\t\t\t\t\talignItems:'center',\r\n\t\t\t\t\tjustifyContent:'center',\r\n\t\t\t\t\tborderRadius:'0 30px 30px 0',\r\n\t\t\t\t\tborder:'solid 2px #084c61',\r\n\t\t\t\t\tpaddingRight:'5px'\r\n\t\t\t\t}}>{prediction}</div> \r\n\t\t\t</div>\r\n\r\n\t\t</div>\t\r\n\t\t)\r\n}\t\r\n\r\nexport default ML","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\n\r\nimport Stats from '../Stats/Stats'\r\nimport DataDisplay from '../DataDisplay/DataDisplay'\r\nimport FeatureVsTarget from '../FeatureVsTarget/FeatureVsTarget'\r\nimport FeatureImportance from '../FeatureImportance/FeatureImportance'\r\nimport ML from '../ML/ML'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      style={{\r\n      \toverflowY:'auto'\r\n      }}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nlet Tabbed = () => {\r\n\r\n\tconst classes = useStyles();\r\n\tlet theme = useTheme()\r\n   const [value, setValue] = React.useState(0);\r\n\r\n   const handleChange = (event, newValue) => {\r\n     setValue(newValue);\r\n   };\r\n\r\n   let handleChangeIndex = index => {\r\n   \tsetValue(index)\r\n   }\r\n\r\n\treturn(\r\n\t\t<div className={classes.root}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        \t<Tabs\r\n        \t\tTabIndicatorProps={{style: {backgroundColor: '#084c61',color:'#fff'}}}\r\n        \t\tinkBarStyle={{backgroundColor: '#084c61'}}\r\n        \t\tstyle={{\r\n        \t\t\tbackground:'#680E4B',\r\n        \t\t\tcolor:'#C492B1'\r\n        \t\t}}\r\n\t         value={value}\r\n\t         onChange={handleChange}\r\n\t         variant=\"fullWidth\"\r\n\t         scrollButtons=\"auto\"\r\n\t         aria-label=\"scrollable auto tabs example\"\r\n\t         centered\r\n        \t>\r\n        \t\t<Tab label=\"The Dataset\" {...a11yProps(0)} />\r\n\t         <Tab label=\"Dataset Stats\" {...a11yProps(1)} />\r\n\t         <Tab label=\"Features vs Target\" {...a11yProps(2)} />\r\n\t         <Tab label=\"Feature Importances\" {...a11yProps(3)} />\r\n\t         <Tab label=\"Machine Learning\" {...a11yProps(4)} />\r\n        \t</Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n\t      axis = {theme.direction === 'rt1' ? 'x-reverse' : 'x'}\r\n\t      index = {value}\r\n\t      onChangeIndex = {handleChangeIndex}\r\n      >\r\n\t      <TabPanel value={value} index={0}>\r\n\t      \t<DataDisplay/>\r\n\t      </TabPanel>\r\n\t      <TabPanel value={value} index={1}>\r\n\t        <Stats/>\r\n\t      </TabPanel>\r\n\t      <TabPanel value={value} index={2}>\r\n\t        <FeatureVsTarget/>\r\n\t      </TabPanel>\r\n\t      <TabPanel value={value} index={3}>\r\n\t        <FeatureImportance/>\r\n\t      </TabPanel>\r\n\t      <TabPanel value={value} index={4}>\r\n\t        <ML/>\r\n\t      </TabPanel>\r\n\t   </SwipeableViews>   \r\n    \t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Tabbed","import React,{useState,useContext} from 'react'\r\nimport './Main.css'\r\nimport Tabbed from '../Tabbed/Tabbed'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport axios from 'axios'\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DataContext} from '../../Context/Context'\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ReactLoading from \"react-loading\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DescriptionTwoToneIcon from '@material-ui/icons/DescriptionTwoTone';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n  \tcolor: '#BCE7FD',\r\n    '& label.Mui-focused': {\r\n      color: '#BCE7FD',\r\n    },\r\n    '& label':{\r\n    \tcolor: '#BCE7FD'\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#BCE7FD',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#BCE7FD',\r\n        borderWidth:'2px'\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#BCE7FD',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#BCE7FD',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  inputField:{\r\n  \tcolor:'#BCE7FD',\r\n\tfontSize:'14px',\r\n\tmarginTop:'15px'\r\n  },\r\n  button:{\r\n  \tmarginTop:'15px',\r\n  \twidth:'100%',\r\n  \tbackgroundColor:'#084c61',\r\n  \tcolor:'#BCE7FD',\r\n  \t'&:hover':{\r\n  \t\tbackgroundColor:'#084c61',\r\n  \t\tcolor:'#BCE7FD',\r\n  \t}\r\n  },\r\n  fontColor:{\r\n  \tcolor:'#BCE7FD'\r\n  }\r\n}));\r\n\r\nlet Main = () => {\r\n\r\n\tlet {setData} = useContext(DataContext)\r\n\r\n\tlet [file,setFile] = useState(null)\r\n\tlet [target,setTarget] = useState('')\r\n\tlet [uploaded,setUploaded] = useState(false)\r\n\tlet [isLoading,setIsLoading] = useState(false)\r\n\tlet [show,setShow] = useState(false)\r\n\r\n\tlet [showTicks,setShowTicks] = useState({\r\n\t\tcustom:false,\r\n\t\tprostate:false,\r\n\t\theart:false,\r\n\t\tstockprices:false\r\n\t})\r\n\r\n\tlet getInsights = (e) => {\r\n\r\n\t\tsetIsLoading(true)\r\n\r\n\t\tlet formdata = new FormData()\r\n\t\tformdata.append('file',file)\r\n\t\tformdata.append('target',target)\r\n\t\tformdata.append('showTicks',JSON.stringify(showTicks))\r\n\r\n\t\tconsole.log(file,target)\r\n\t\taxios({\r\n\t\t  \tmethod: 'post',\r\n\t\t  \turl: '/getData',\r\n\t\t  \theaders: {\r\n\t\t  \t\t'Access-Control-Allow-Origin': '*'\r\n\t\t  \t},\r\n\t\t  \twithCredentials:true,\r\n\t\t  \tdata:formdata\r\n\t\t})\r\n\t\t.then(res=>{\r\n\t\t\tsetData(res.data)\r\n\t\t\tsetIsLoading(false)\r\n\t\t\tsetShow(true)\r\n\t\t\tconsole.log('In then')\r\n\t\t})\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\tclassName='window'>\r\n\t\t\t<div\r\n\t\t\tclassName={(show)?'main':'shrinkedMain'}>\r\n\t\t\t\t<div\r\n\t\t\t\tclassName='sidebar'>\r\n\t\t\t\t\t<h2>Data Insights.io</h2>\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\tflexGrow:1,\r\n\t\t\t\t\t\tdisplay:'flex',\r\n\t\t\t\t\t\talignItems:'center',\r\n\t\t\t\t\t\tjustifyContent:'center',\r\n\t\t\t\t\t\tflexDirection:'column',\r\n\t\t\t\t\t\tmarginTop:'-20%'\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange = {e=>{\r\n\t\t\t\t\t\t\tif(e.target.files){\r\n\t\t\t\t\t\t\t\tsetUploaded(true)\r\n\t\t\t\t\t\t\t\tsetShowTicks({\r\n\t\t\t\t\t\t\t\t\tcustom:true,\r\n\t\t\t\t\t\t\t\t\tprostate:false,\r\n\t\t\t\t\t\t\t\t\theart:false,\r\n\t\t\t\t\t\t\t\t\tstockprices:false\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tsetFile(e.target.files[0])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tsetUploaded(false)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}} \r\n\t\t\t\t\t\taccept=\"text/csv\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n\t\t\t\t      <label htmlFor=\"icon-button-file\">\r\n\t\t\t\t      \t<IconButton style={{\r\n\t\t\t\t\t\t      background:'#BCE7FD'\r\n\t\t\t\t\t\t   }} \r\n\t\t\t\t\t\t   aria-label=\"upload picture\" component=\"span\">\r\n\t\t\t\t      \t{(showTicks.custom==false)?\r\n\t\t\t\t      \t\t(\r\n\t\t\t\t\t\t         <CloudUploadIcon />\r\n\t\t\t\t      \t\t)\r\n\t\t\t\t      \t\t:\r\n\t\t\t\t      \t\t(\r\n\t\t\t\t\t\t         <CheckIcon />\r\n\t\t\t\t      \t\t)\r\n\t\t\t\t      \t}\r\n\t\t\t\t      \t</IconButton>\r\n\t\t\t\t      </label>\r\n\t\t\t\t      <span style={{\r\n\t\t\t\t      \tfontSize:'14px',\r\n\t\t\t\t      \tmarginTop:'5px'\r\n\t\t\t\t      }}> Allowed Format .csv</span>\r\n\t\t\t\t      <CssTextField\r\n\t\t\t\t      \tstyle={{\r\n\t\t\t\t      \t\tcolor: '#BCE7FD'\r\n\t\t\t\t      \t}}\r\n\t\t\t\t      \tInputProps={{\r\n\t\t\t\t\t\t    className: classes.fontColor\r\n\t\t\t\t\t\t  \t}}\t\r\n\t\t\t\t\t\t  \tonChange={e=>{\r\n\t\t\t\t\t\t  \t\tsetTarget(e.target.value)\r\n\t\t\t\t\t\t  \t}}\r\n\t\t\t\t        \tclassName={classes.inputField}\r\n\t\t\t\t        \tlabel=\"Target Name\"\r\n\t\t\t\t        \tvariant=\"outlined\"\r\n\t\t\t\t        \tid=\"custom-css-outlined-input\"\r\n\t\t\t\t      />\r\n\t\t\t\t      <div style={{marginTop:'7px'}} align='center'>\r\n\t\t\t\t      <p>OR</p>\r\n\t\t\t\t      <p>Select among these example datasets</p>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div style={{\r\n\t\t\t\t      \tmarginTop:'10px',\r\n\t\t\t\t      \tdisplay:'flex',\r\n\t\t\t\t      \tjustifyContent:'space-around',\r\n\t\t\t\t      \twidth:'100%'\r\n\t\t\t\t      }}>\r\n\t\t\t\t      \t<Tooltip\r\n\t\t\t\t      \tstyle={{fontSize:'18px'}} \r\n\t\t\t\t      \ttitle=\"prostate Dataset\">\r\n\t\t\t\t\t\t      <IconButton\r\n\t\t\t\t\t\t      onClick = {e=>{\r\n\t\t\t\t\t\t\t\t\tsetShowTicks({\r\n\t\t\t\t\t\t\t\t\t\tcustom:false,\r\n\t\t\t\t\t\t\t\t\t\tprostate:true,\r\n\t\t\t\t\t\t\t\t\t\theart:false,\r\n\t\t\t\t\t\t\t\t\t\tstockprices:false\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t      style={{\r\n\t\t\t\t\t\t\t\t   background:'#BCE7FD'\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\t\taria-label=\"upload picture\" component=\"span\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t(showTicks.prostate==true)?\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckIcon/>\r\n\t\t\t\t\t\t\t\t\t\t):\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionTwoToneIcon />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Stock Prices Dataset\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t      onClick = {e=>{\r\n\t\t\t\t\t\t\t\t\tsetShowTicks({\r\n\t\t\t\t\t\t\t\t\t\tcustom:false,\r\n\t\t\t\t\t\t\t\t\t\tprostate:false,\r\n\t\t\t\t\t\t\t\t\t\theart:false,\r\n\t\t\t\t\t\t\t\t\t\tstockprices:true\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t      style={{\r\n\t\t\t\t\t\t\t\t   background:'#BCE7FD'\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\t\taria-label=\"upload picture\" component=\"span\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t(showTicks.stockprices==true)?\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckIcon/>\r\n\t\t\t\t\t\t\t\t\t\t):\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionTwoToneIcon />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<Tooltip title=\"heart Dataset\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t      onClick = {e=>{\r\n\t\t\t\t\t\t\t\t\tsetShowTicks({\r\n\t\t\t\t\t\t\t\t\t\tcustom:false,\r\n\t\t\t\t\t\t\t\t\t\tprostate:false,\r\n\t\t\t\t\t\t\t\t\t\theart:true,\r\n\t\t\t\t\t\t\t\t\t\tstockprices:false\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t      style={{\r\n\t\t\t\t\t\t\t\t   background:'#BCE7FD'\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\t\taria-label=\"upload picture\" component=\"span\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t(showTicks.heart==true)?\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckIcon/>\r\n\t\t\t\t\t\t\t\t\t\t):\r\n\t\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t\t\t<DescriptionTwoToneIcon />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <Button onClick={getInsights}\r\n\t\t\t\t      elevation={0} variant=\"contained\" className={classes.button}>\r\n\t\t\t\t        Get Insights\r\n\t\t\t\t      </Button>\r\n\t\t\t      </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\tclassName={(!show)?'none':'insights'}>\r\n\t\t\t\t\t<Tabbed/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{(isLoading)?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\tposition:'fixed',\r\n\t\t\t\t\t\theight:'100vh',\r\n\t\t\t\t\t\twidth:'100vw',\r\n\t\t\t\t\t\tdisplay:'flex',\r\n\t\t\t\t\t\talignItems:'center',\r\n\t\t\t\t\t\tjustifyContent:'center',\r\n\t\t\t\t\t\tbackground:'#42033d',\r\n\t\t\t\t\t\tflexDirection:'column',\r\n\t\t\t\t\t\ttop:0,\r\n\t\t\t\t\t\tleft:0,\r\n\t\t\t\t\t\tzIndex:1000000\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<h2 style={{color:'white',marginBottom:0}}>Data Insights.io</h2>\r\n\t\t\t\t\t\t<ReactLoading type={'cubes'} color=\"#fff\" />\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t):null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport Main from './components/Main/Main'\n\nimport {DataProvider} from './Context/Context'\n\nfunction App() {\n  return (\n   <div className=\"App\">\n   \t<DataProvider>\n   \t\t<Main/>  \n   \t</DataProvider>\t\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios'\n\n// axios.defaults.baseURL = 'http://localhost:5000'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}